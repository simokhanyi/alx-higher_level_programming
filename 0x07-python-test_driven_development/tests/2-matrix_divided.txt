# Test Cases for 2-matrix_divided.py

# Test case 1: Basic matrix division
# Input matrix: [[1, 2, 3], [4, 5, 6]]
# Divisor: 3
# Expected output: [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test case 2: Division by zero
# Input matrix: [[1, 2], [3, 4]]
# Divisor: 0
# Expected output: ZeroDivisionError("division by zero")
>>> matrix_divided([[1, 2], [3, 4]], 0)
ZeroDivisionError("division by zero")

# Test case 3: Non-numeric divisor
# Input matrix: [[1, 2], [3, 4]]
# Divisor: "invalid"
# Expected output: TypeError("div must be a number")
>>> matrix_divided([[1, 2], [3, 4]], "invalid")
TypeError("div must be a number")

# Test case 4: Matrix with rows of different sizes
# Input matrix: [[1, 2, 3], [4, 5]]
# Divisor: 2
# Expected output: TypeError("Each row of the matrix must have the same size")
>>> matrix_divided([[1, 2, 3], [4, 5]], 2)
TypeError("Each row of the matrix must have the same size")

# Test case 5: Non-numeric elements in the matrix
# Input matrix: [[1, 2], [3, "invalid"]]
# Divisor: 2
# Expected output: TypeError("matrix must be a matrix (list of lists) of integers/floats")
>>> matrix_divided([[1, 2], [3, "invalid"]], 2)
TypeError("matrix must be a matrix (list of lists) of integers/floats")
