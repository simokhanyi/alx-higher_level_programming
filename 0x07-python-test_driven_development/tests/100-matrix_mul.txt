# Test Cases for matrix_mul

# Test Case 1: Valid multiplication of 2x2 matrices
# m_a = [[1, 2], [3, 4]], m_b = [[1, 2], [3, 4]]
# Expected Output: [[7, 10], [15, 22]]
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

# Test Case 2: Valid multiplication of 1x2 and 2x2 matrices
# m_a = [[1, 2]], m_b = [[3, 4], [5, 6]]
# Expected Output: [[13, 16]]
>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

# Test Case 3: Invalid input - m_a is not a list
# m_a = 5, m_b = [[1, 2], [3, 4]]
# Expected Output: TypeError("m_a must be a list")
>>> matrix_mul(5, [[1, 2], [3, 4]])
TypeError("m_a must be a list")

# Test Case 4: Invalid input - m_a contains a non-integer/float value
# m_a = [[1, 2], [3, '4']], m_b = [[1, 2], [3, 4]]
# Expected Output: ValueError("m_a should contain only integers or floats")
>>> matrix_mul([[1, 2], [3, '4']], [[1, 2], [3, 4]])
ValueError("m_a should contain only integers or floats")

# Test Case 5: Invalid input - m_a and m_b cannot be multiplied
# m_a = [[1, 2, 3], [4, 5, 6]], m_b = [[1, 2], [3, 4]]
# Expected Output: ValueError("m_a and m_b can't be multiplied")
>>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[1, 2], [3, 4]])
ValueError("m_a and m_b can't be multiplied")
